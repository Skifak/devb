
{
    
    
    
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
    "pages": [{"date":"2023-01-31","image":"","imageAlt":"","link":"https://devb.fun/posts/post32/","summary":"","tags":["tag1","tag2","tag3"],"text":"","title":"Post32"},{"date":"2023-01-31","image":"","imageAlt":"","link":"https://devb.fun/posts/post3/","summary":"","tags":["tag1","tag2","tag3"],"text":"","title":"Post3"},{"date":"2023-01-31","image":"","imageAlt":"","link":"https://devb.fun/posts/post2/","summary":"","tags":["tag1","tag2","tag3"],"text":"","title":"Post2"},{"date":"2023-01-31","image":"","imageAlt":"","link":"https://devb.fun/posts/post1/","summary":"","tags":["tag1","tag2","tag3"],"text":"","title":"Post1"},{"date":"2023-01-31","image":"","imageAlt":"","link":"https://devb.fun/posts/chatgpt/","summary":"","tags":["tag1","tag2","tag3"],"text":"","title":"Chatgpt"},{"date":"2023-01-31","image":"","imageAlt":"","link":"https://devb.fun/posts/parser/","summary":"","tags":["tag1","tag2","tag3"],"text":"","title":"Parser"},{"date":"2023-01-31","image":"","imageAlt":"","link":"https://devb.fun/posts/hugo/","summary":"","tags":["tag1","tag2","tag3"],"text":"","title":"Hugo"},{"date":"0001-01-01","image":"","imageAlt":"","link":"https://devb.fun/posts/hugo/hugo/","summary":"title: \u0026#34;{{ replace (replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34;) \u0026#34;_\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} tags:  - tag1  - tag2  - tag3 image: https://ocl-steinberg-live.steinberg.net/_storage/asset/178442/storage/PNG_large_2000px/178442-large.png comments: true Создание блога с помощью Hugo+GitHub pages Считаю правильным начать ведение этого блога с гайда по установке Hugo.\nHugo - это открытый исходный генератор статических сайтов, который получил большую популярность среди блогеров и веб-разработчиков. Он используется для создания и поддержания веб-сайтов и блогов, основанных на статических страницах.","tags":[],"text":"title: \u0026#34;{{ replace (replace .name \u0026#34;-\u0026#34; \u0026#34; \u0026#34;) \u0026#34;_\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .date }} tags:  - tag1  - tag2  - tag3 image: https://ocl-steinberg-live.steinberg.net/_storage/asset/178442/storage/png_large_2000px/178442-large.png comments: true создание блога с помощью hugo+github pages считаю правильным начать ведение этого блога с гайда по установке hugo.\nhugo - это открытый исходный генератор статических сайтов, который получил большую популярность среди блогеров и веб-разработчиков. он используется для создания и поддержания веб-сайтов и блогов, основанных на статических страницах. для контента hugo использует в качестве языка разметки markdown.\nодним из основных преимуществ hugo является его скорость. он может генерировать статические страницы в считанные секунды, что позволяет увеличить скорость загрузки сайта и улучшить пользовательский опыт.\nhugo также обладает множеством тем и шаблонов, которые можно использовать для персонализации своего сайта. вы также можете настраивать свои публикации используя метаданные, вставлять медиа-файлы и многое другое. это делает hugo хорошим выбором для людей, которые ищут инструмент для создания личного сайта.\n вся настройка и дальнейшее использование hugo будет непосредственно в терминале.\n необходимый софт для реализации   hugo\n  git\n  установка hugo разработчики hugo подробно описали методы установки на популярные ос в документации. ниже приведу пару примеров\nустановка на linux fedora  обновите список пакетов:  sudo dnf update\nустановите последнюю версию hugo:  sudo dnf install hugo\nустановка на macos  установите homebrew:  /bin/bash -c \u0026quot;$(curl -fssl https://raw.githubusercontent.com/homebrew/install/master/install.sh)\u0026quot;\nустановите последнюю версию hugo:  brew install hugo\nсоздание своего первого сайта создайте новый сайт с помощью hugo:\nhugo new site mysite\nперейдите в папку сайта:\ncd mysite\nвыбери подходящую тему для своего блога на сайте hugo и подключи его через git submodule. например, тема mediumish может быть добавлена командой:\ngit submodule add https://github.com/lgaida/mediumish-gohugo-theme themes/mediumish\n ты можешь скачать тему в директорию \u0026lt;owner\u0026gt;.github.io/themes или склонировать репозиторий темы. использование git submodule позволяет легко обновлять тему из источника. дополнительные модули можно добавить в директорию \u0026lt;owner\u0026gt;.github.io/layouts. о выборе между git clone или git submodule для тем hugo можно прочитать в обсуждениях.\n настало время настроить сайт. рекомендую взять стандартный config.toml, который можно найти в деректории скаченой темы themes/mediumish, не забудь изменить параметры под свой сайт. ниже приведёны те строки которые нужно изменить под себя:\n# адрес твоего сайта baseurl = \u0026#34;https://\u0026lt;owner\u0026gt;.github.io/\u0026#34; # язык сайта(либо любой другой) languagecode = \u0026#34;ru-ru\u0026#34; # название твоего сайт title = \u0026#34;название блога\u0026#34; # используемая тема theme = \u0026#34;mediumish\u0026#34; # сюда hugo сохранит сгенерированный сайт publishdir = \u0026#34;./docs/\u0026#34;  мы используем для хостинга github pages. поэтому url-адрес задаётся по шаблону https://\u0026lt;owner\u0026gt;.github.io/.\nhugo во время генерации помещает все файлы готового сайта в директорию public, а github pages может создать страницу либо из корня репозитория, либо из директории docs. поэтому в конфигурационном файле добавляем строчку publishdir = \u0026quot;docs\u0026quot;. это укажет генератору, что теперь файлы следует сохранять в docs.\n теперь сгенерируем сайт. для этого, находясь в корне проекта, выполняем следующую команду:\nhugo\nзапустим сервер разработки hugo, чтобы просмотреть сайт.\nhugo server\nпришло время создать первый пост. но перед этим заменим дефолтный шаблон постов и заменим его на шаблон скаченной темы. переходим в следующую деррикторию themes/mediumish/archetypes/ . отрываем в этой папке файл default.md и содержимое файла вставляем в ~/mysite/archetypes/default.md.\nтеперь можно создать пост. вводим следующую команду:\nhugo new posts/my-first-post.md\nhugo создал файл в content/postsкаталог. откройте файл в вашем редакторе.\n--- title: \u0026#34;my first post\u0026#34; date: 2022-11-20t09:03:20-08:00 draft: true --- обратите внимание на draft со значением true. по умолчанию hugo не публикует черновой контент при создании сайта. не меняем значение черновика, сделаем это позже.\n--- title: \u0026#34;навание поста\u0026#34; date: 2022-11-20t09:03:20-08:00 draft: true --- ## заголовок  текст поста сохраните файл, затем запустите сервер разработки hugo, чтобы просмотреть сайт. чтобы включить черновик в следующий билд, вводим следующую команду:\nhugo -d\nподготовка github сайт готов к выгрузке во внешниий репозиторий github. для начал перейдём в свой профиль на github и создадим публичный репозиторий. после создания производим первичную настройку и связываем нашу дерикторию с созданым репозиторием.\nпосле успешного деплоя сайта в репозиторий, открываем настройки репозитория и идем в раздел settings\nдалее в pages\nи производим настройку репозитория данным образом\nтеперь снова вернёмся в терминал и в корневой папке сайта выполним следующие команды:\ngit add . git commit -m \u0026#39;publish site\u0026#39; git push заключение на этом создание сайта закончилось. теперь можно перейти на свой созданый сайт, ссылку на который указывали в конфигурационном файле.\n","title":""}]
}

